#!/usr/bin/env python
PACKAGE = "local_navigation"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()
#
gen.add("simulationStart", bool_t, 0, "Simulation parameter crossPointCheckerFlag", False)
gen.add("obstacleNum", int_t, 0, "Simulation param: obstacle num", 0, 0, 3)
#obstacle
gen.add("obstacleX1", double_t, 0, "Simulation param: obstacle1 posX", 0, -4, 4)
gen.add("obstacleY1", double_t, 0, "Simulation param: obstacle1 posY", 0, -4, 4)
gen.add("obstacleW1", double_t, 0, "Simulation param: obstacle1 posX", 0.3, 0.1, 3)
gen.add("obstacleH1", double_t, 0, "Simulation param: obstacle1 posY", 0.3, 0.1, 3)
gen.add("obstacleVx1", double_t, 0, "Simulation param: obstacle1 posX", 0, -1, 1)
gen.add("obstacleVy1", double_t, 0, "Simulation param: obstacle1 posY", 0, -1, 1)
gen.add("obstacleX2", double_t, 0, "Simulation param: obstacle2 posX", 0, -4, 4)
gen.add("obstacleY2", double_t, 0, "Simulation param: obstacle2 posY", 0, -4, 4)
gen.add("obstacleW2", double_t, 0, "Simulation param: obstacle1 posX", 0.3, 0.1, 3)
gen.add("obstacleH2", double_t, 0, "Simulation param: obstacle1 posY", 0.3, 0.1, 3)
gen.add("obstacleVx2", double_t, 0, "Simulation param: obstacle1 posX", 0, -1, 1)
gen.add("obstacleVy2", double_t, 0, "Simulation param: obstacle1 posY", 0, -1, 1)
#robot parame
gen.add("wheel_2d", double_t, 0, "Simulation param: obstacle1 posX", 0.3125, 0.3125, 0.3125)
gen.add("sensor_angle_min", double_t, 0, "Simulation param: sensor range", 45, 0, 90)
gen.add("sensor_angle_max", double_t, 0, "Simulation param: sensor range", 135, 90, 189)
gen.add("max_speed", double_t, 0, "Simulation param: max_speed", 0.6, 0, 1)
#robot position
gen.add("robot_init_x", double_t, 0, "Simulation param: robot init posX", 0, -4, 4)
gen.add("robot_init_y", double_t, 0, "Simulation param: robot init posY", 0, -4, 4)
gen.add("robot_init_angle", double_t, 0, "Simulation param: robot init angle", 90, -180, 189)
gen.add("robot_init_v", double_t, 0, "Simulation param: robot init vel", 0, 0, 1)
gen.add("robot_init_w", double_t, 0, "Simulation param: robot init ang vel", 0, -1, 1)
#goal
gen.add("goal_x", double_t, 0, "Simulation param: goal posX", 0, -10, 10)
gen.add("goal_y", double_t, 0, "Simulation param: goal posY", 6, -10, 10)
#
gen.add("encoderVel_r", double_t, 0, "Simulation parameter encoderVel_r", 0, -1, 1)
gen.add("encoderVel_l", double_t, 0, "Simulation parameter encoderVel_l", 0, -1, 1)
gen.add("init_vel", double_t, 0, "Simulation parameter cmd_vel", 0.2, -1, 1)
gen.add("init_anglarVel", double_t, 0, "Simulation parameter cmd_vel", 0, -1, 1)
gen.add("robotRadius", double_t, 0, "Simulation parameter RobotRadius", 0.2, 0.1, 1)
gen.add("robotX", double_t, 0, "Simulation param: obstacle2 posX", 0, -4, 4)
gen.add("robotY", double_t, 0, "Simulation param: obstacle2 posY", 0, -4, 4)
gen.add("robotYaw", double_t, 0, "Simulation param: obstacle2 posY", 0, -4, 4)
gen.add("deltaTime", double_t, 0, "Simulation param: obstacle2 posY", 0, -4, 4)
gen.add("endTime", double_t, 0, "Simulation param: obstacle2 posY", 0, -4, 4)

exit(gen.generate(PACKAGE, "local_navigation", "simulater"))